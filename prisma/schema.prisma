// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" //coba pake sqlite dulu
  url      = "postgresql://postgres:masfarhandouble@34.57.197.206/kebunq-sql"
}

model Users {
  user_id String @id
  email String @unique
  name String
  profile_image_id String?
  created_at String

  //have relation on
  predictions Predictions[]
  discussions Discussions[]
  comments Comments[]
}

model Predictions {
  prediction_id String @id
  plant_index Int
  disease_index Int
  confidence_score Float
  image_id String
  created_at String

  //relation with
  user_id String

  //have relation on
  user Users @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}

model Discussions {
  discussion_id String @id @default(uuid())
  content String
  image_id String?
  created_at String

  //relation with
  user_id String

  //have relation on
  user Users @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  comments Comments[]
}

model Comments {
  comment_id String @id @default(uuid())
  content String 
  created_at String

  //relation with
  user_id String
  discussion_id String


  //have relation on
  user Users @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  discussion Discussions @relation(fields: [discussion_id], references: [discussion_id], onDelete: Cascade, onUpdate: NoAction)
}
